<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CashierV3.GUI">
    
    <!-- Ordinary navigation buttons -->
    <Style TargetType="{x:Type Button}" x:Key="NavButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource MontserratRegular}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeVerySmall}" />
        <Setter Property="Foreground" Value="{DynamicResource DarkBrush}" />
        <Setter Property="Padding" Value="10" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="true">
                        <TextBlock Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Text="{TemplateBinding Content}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Foreground="{TemplateBinding Foreground}"/>
                    </Border>

                    <!-- On Hover effect-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource LightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Logo Navigation button -->
    <Style TargetType="{x:Type Button}" x:Key="LogoButton">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        SnapsToDevicePixels="true">
                        <ContentPresenter Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Logout Button -->
    <Style TargetType="{x:Type Button}" x:Key="LogoutButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource WineRedBrush}" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Margin" Value="5" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="panelText"
                                   Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Margin="{TemplateBinding Padding}" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       />
                            <TextBlock x:Name="panelIcon"
                                       Text="&#xf2f5;"
                                       VerticalAlignment="Center"
                                       FontSize="{StaticResource FontSizeExtraLarge}"
                                       FontFamily="{StaticResource FontAwesomeSolid}" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="Transparent" Duration="0:0:0.3" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" />
                                    <ColorAnimation To="{StaticResource Hover}" Duration="0:0:0.3" Storyboard.TargetName="panelText" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource Hover}" Duration="0:0:0.3" Storyboard.TargetName="panelIcon" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation To="{StaticResource WineRed}"  Duration="0:0:0.3" Storyboard.TargetName="panelText" Storyboard.TargetProperty="Foreground.Color" />
                                    <ColorAnimation To="{StaticResource WineRed}" Duration="0:0:0.3" Storyboard.TargetName="panelIcon" Storyboard.TargetProperty="Foreground.Color" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Add/Update button -->
    <Style TargetType="{x:Type Button}" x:Key="AddUpdateButton">
        <Setter Property="Background" Value="{DynamicResource GreenBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBrush}" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeRegular}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="true">

                    </Border>

                    <!-- On Hover effect-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource LightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Delete button -->
    <Style TargetType="{x:Type Button}" x:Key="DeleteButton">
        <Setter Property="Background" Value="{DynamicResource WineRedBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBrush}" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeRegular}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            SnapsToDevicePixels="true">
                        <TextBlock Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Text="{TemplateBinding Content}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Foreground="{TemplateBinding Foreground}"/>
                    </Border>

                    <!-- On Hover effect-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource DarkBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource LightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Main Menu button-->
    <Style TargetType="Button" x:Key="MainMenuButton">
        <Setter Property="Width" Value="200" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeRegular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="20" />

    </Style>

    <!-- Login Button -->
    <Style TargetType="{x:Type Button}" x:Key="LoginButton" BasedOn="{StaticResource NavButton}">
        <Setter Property="Background" Value="{DynamicResource GreenBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MontserratRegular}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeVerySmall}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="50 10 0 0" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="ItemButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                            BorderThickness="2"
                            Padding="4,2" 
                            BorderBrush="DarkGray" 
                            CornerRadius="3" 
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource WineRedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>